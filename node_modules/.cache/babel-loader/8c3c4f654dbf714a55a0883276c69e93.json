{"ast":null,"code":"var _jsxFileName = \"/home/jhon/Projetos/react-online-store/src/Pages/Home.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListOfCategories from '../Components/ListOfCategories';\nimport SearchBar from '../Components/SearchBar';\nimport ProductCard from '../Components/ProductCard';\nimport * as api from '../services/api';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      productsList: [],\n      categories: [],\n      toggle: false\n    };\n    this.addItemCart = this.addItemCart.bind(this);\n    this.fetchApiSearch = this.fetchApiSearch.bind(this);\n    this.fetchByCategoryId = this.fetchByCategoryId.bind(this);\n    this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem('shoppingCart')) {\n      localStorage.setItem('shoppingCart', JSON.stringify([]));\n    }\n\n    api.getCategories().then(response => this.setState({\n      categories: response\n    }));\n  }\n\n  addItemCart(product) {\n    const currentCart = JSON.parse(localStorage.getItem('shoppingCart'));\n    const isOnCart = currentCart.some(item => item.id === product.id);\n\n    if (isOnCart) {\n      currentCart.find(elem => {\n        if (elem.id === product.id) {\n          const {\n            quantity,\n            available_quantity: availableQuantity\n          } = elem;\n\n          if (quantity < availableQuantity) {\n            elem.quantity = quantity + 1;\n            localStorage.setItem('shoppingCart', JSON.stringify(currentCart));\n          }\n        }\n      });\n    } else {\n      product.quantity = 1;\n      const newCart = [...currentCart, product];\n      localStorage.setItem('shoppingCart', JSON.stringify(newCart));\n    }\n  }\n\n  async fetchApiSearch() {\n    const {\n      searchText\n    } = this.state;\n    const fetchList = await api.getProductsFromCategoryAndQuery('', searchText);\n\n    if (!fetchList.results.length) {\n      this.setState({\n        showMessage: true\n      });\n    } else {\n      this.setState({\n        productsList: fetchList.results,\n        showMessage: false\n      });\n    }\n  }\n\n  async fetchByCategoryId(categoryId) {\n    const fetchList = await api.getProductsFromCategoryAndQuery(categoryId, '');\n    this.setState({\n      productsList: fetchList.results\n    });\n  }\n\n  handleSearchTextChange({\n    target\n  }) {\n    const {\n      value\n    } = target;\n    this.setState({\n      searchText: value\n    });\n  }\n\n  toggle(product) {\n    const {\n      toggle\n    } = this.state;\n    this.addItemCart(product);\n    this.setState({\n      toggle: !toggle\n    });\n  }\n\n  render() {\n    const shoppingCart = JSON.parse(localStorage.getItem('shoppingCart'));\n    const {\n      productsList,\n      showMessage,\n      categories\n    } = this.state;\n    const emptySearchMessage = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 32\n      }\n    }, \"Nenhum produto foi encontrado\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearchTextChange: this.handleSearchTextChange,\n      onClickSearch: this.fetchApiSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ListOfCategories, {\n      categories: categories,\n      onClickSelectedCategory: this.fetchByCategoryId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), showMessage ? emptySearchMessage : /*#__PURE__*/React.createElement(ProductCard, {\n      products: productsList,\n      addItemCart: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/shopping-cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Carrinho \", shoppingCart !== null ? shoppingCart.length : 0)));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/jhon/Projetos/react-online-store/src/Pages/Home.jsx"],"names":["React","Link","ListOfCategories","SearchBar","ProductCard","api","Home","Component","constructor","props","state","searchText","productsList","categories","toggle","addItemCart","bind","fetchApiSearch","fetchByCategoryId","handleSearchTextChange","componentDidMount","localStorage","getItem","setItem","JSON","stringify","getCategories","then","response","setState","product","currentCart","parse","isOnCart","some","item","id","find","elem","quantity","available_quantity","availableQuantity","newCart","fetchList","getProductsFromCategoryAndQuery","results","length","showMessage","categoryId","target","value","render","shoppingCart","emptySearchMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,YAAY,EAAE,EAFH;AAGXC,MAAAA,UAAU,EAAE,EAHD;AAIXC,MAAAA,MAAM,EAAE;AAJG,KAAb;AAMA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKG,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BH,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKF,MAAL,GAAc,KAAKA,MAAL,CAAYE,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAL,EAA2C;AACzCD,MAAAA,YAAY,CAACE,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAe,EAAf,CAArC;AACD;;AACDpB,IAAAA,GAAG,CAACqB,aAAJ,GACGC,IADH,CACSC,QAAD,IAAc,KAAKC,QAAL,CAAc;AAAEhB,MAAAA,UAAU,EAAEe;AAAd,KAAd,CADtB;AAED;;AAEDb,EAAAA,WAAW,CAACe,OAAD,EAAU;AACnB,UAAMC,WAAW,GAAGP,IAAI,CAACQ,KAAL,CAAWX,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAApB;AACA,UAAMW,QAAQ,GAAGF,WAAW,CAACG,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,OAAO,CAACM,EAA/C,CAAjB;;AACA,QAAIH,QAAJ,EAAc;AACZF,MAAAA,WAAW,CAACM,IAAZ,CAAkBC,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACF,EAAL,KAAYN,OAAO,CAACM,EAAxB,EAA4B;AAC1B,gBAAM;AAAEG,YAAAA,QAAF;AAAYC,YAAAA,kBAAkB,EAAEC;AAAhC,cAAsDH,IAA5D;;AACA,cAAIC,QAAQ,GAAGE,iBAAf,EAAkC;AAChCH,YAAAA,IAAI,CAACC,QAAL,GAAgBA,QAAQ,GAAG,CAA3B;AACAlB,YAAAA,YAAY,CAACE,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeM,WAAf,CAArC;AACD;AACF;AACF,OARD;AASD,KAVD,MAUO;AACLD,MAAAA,OAAO,CAACS,QAAR,GAAmB,CAAnB;AACA,YAAMG,OAAO,GAAG,CAAC,GAAGX,WAAJ,EAAiBD,OAAjB,CAAhB;AACAT,MAAAA,YAAY,CAACE,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeiB,OAAf,CAArC;AACD;AACF;;AAED,QAAMzB,cAAN,GAAuB;AACrB,UAAM;AAAEN,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,UAAMiC,SAAS,GAAG,MAAMtC,GAAG,CAACuC,+BAAJ,CAAoC,EAApC,EAAwCjC,UAAxC,CAAxB;;AAEA,QAAI,CAACgC,SAAS,CAACE,OAAV,CAAkBC,MAAvB,EAA+B;AAC7B,WAAKjB,QAAL,CAAc;AACZkB,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAJD,MAIO;AACL,WAAKlB,QAAL,CAAc;AACZjB,QAAAA,YAAY,EAAE+B,SAAS,CAACE,OADZ;AAEZE,QAAAA,WAAW,EAAE;AAFD,OAAd;AAID;AACF;;AAED,QAAM7B,iBAAN,CAAwB8B,UAAxB,EAAoC;AAClC,UAAML,SAAS,GAAG,MAAMtC,GAAG,CAACuC,+BAAJ,CAAoCI,UAApC,EAAgD,EAAhD,CAAxB;AACA,SAAKnB,QAAL,CAAc;AACZjB,MAAAA,YAAY,EAAE+B,SAAS,CAACE;AADZ,KAAd;AAGD;;AAED1B,EAAAA,sBAAsB,CAAC;AAAE8B,IAAAA;AAAF,GAAD,EAAa;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAYD,MAAlB;AACA,SAAKpB,QAAL,CAAc;AACZlB,MAAAA,UAAU,EAAEuC;AADA,KAAd;AAGD;;AAEDpC,EAAAA,MAAM,CAACgB,OAAD,EAAU;AACd,UAAM;AAAEhB,MAAAA;AAAF,QAAa,KAAKJ,KAAxB;AACA,SAAKK,WAAL,CAAiBe,OAAjB;AACA,SAAKD,QAAL,CAAc;AAAEf,MAAAA,MAAM,EAAE,CAACA;AAAX,KAAd;AACD;;AAEDqC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG5B,IAAI,CAACQ,KAAL,CAAWX,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAArB;AACA,UAAM;AAAEV,MAAAA,YAAF;AAAgBmC,MAAAA,WAAhB;AAA6BlC,MAAAA;AAA7B,QAA4C,KAAKH,KAAvD;AACA,UAAM2C,kBAAkB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAA3B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,kBAAkB,EAAG,KAAKlC,sBAD5B;AAEE,MAAA,aAAa,EAAG,KAAKF,cAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE,oBAAC,gBAAD;AACE,MAAA,UAAU,EAAGJ,UADf;AAEE,MAAA,uBAAuB,EAAG,KAAKK,iBAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAUI6B,WAAW,GAAGM,kBAAH,gBAAwB,oBAAC,WAAD;AACjC,MAAA,QAAQ,EAAGzC,YADsB;AAEjC,MAAA,WAAW,EAAG,KAAKE,MAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVvC,eAeE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACasC,YAAY,KAAK,IAAjB,GAAwBA,YAAY,CAACN,MAArC,GAA8C,CAD3D,CADF,CAfF,CADF;AAuBD;;AA3GgC;;AA8GnC,eAAexC,IAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListOfCategories from '../Components/ListOfCategories';\nimport SearchBar from '../Components/SearchBar';\nimport ProductCard from '../Components/ProductCard';\nimport * as api from '../services/api';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      productsList: [],\n      categories: [],\n      toggle: false,\n    };\n    this.addItemCart = this.addItemCart.bind(this);\n    this.fetchApiSearch = this.fetchApiSearch.bind(this);\n    this.fetchByCategoryId = this.fetchByCategoryId.bind(this);\n    this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem('shoppingCart')) {\n      localStorage.setItem('shoppingCart', JSON.stringify([]));\n    }\n    api.getCategories()\n      .then((response) => this.setState({ categories: response }));\n  }\n\n  addItemCart(product) {\n    const currentCart = JSON.parse(localStorage.getItem('shoppingCart'));\n    const isOnCart = currentCart.some((item) => item.id === product.id);\n    if (isOnCart) {\n      currentCart.find((elem) => {\n        if (elem.id === product.id) {\n          const { quantity, available_quantity: availableQuantity } = elem;\n          if (quantity < availableQuantity) {\n            elem.quantity = quantity + 1;\n            localStorage.setItem('shoppingCart', JSON.stringify(currentCart));\n          }\n        }\n      });\n    } else {\n      product.quantity = 1;\n      const newCart = [...currentCart, product];\n      localStorage.setItem('shoppingCart', JSON.stringify(newCart));\n    }\n  }\n\n  async fetchApiSearch() {\n    const { searchText } = this.state;\n    const fetchList = await api.getProductsFromCategoryAndQuery('', searchText);\n\n    if (!fetchList.results.length) {\n      this.setState({\n        showMessage: true,\n      });\n    } else {\n      this.setState({\n        productsList: fetchList.results,\n        showMessage: false,\n      });\n    }\n  }\n\n  async fetchByCategoryId(categoryId) {\n    const fetchList = await api.getProductsFromCategoryAndQuery(categoryId, '');\n    this.setState({\n      productsList: fetchList.results,\n    });\n  }\n\n  handleSearchTextChange({ target }) {\n    const { value } = target;\n    this.setState({\n      searchText: value,\n    });\n  }\n\n  toggle(product) {\n    const { toggle } = this.state;\n    this.addItemCart(product);\n    this.setState({ toggle: !toggle });\n  }\n\n  render() {\n    const shoppingCart = JSON.parse(localStorage.getItem('shoppingCart'));\n    const { productsList, showMessage, categories } = this.state;\n    const emptySearchMessage = <p>Nenhum produto foi encontrado</p>;\n    return (\n      <div>\n        <SearchBar\n          onSearchTextChange={ this.handleSearchTextChange }\n          onClickSearch={ this.fetchApiSearch }\n        />\n        <ListOfCategories\n          categories={ categories }\n          onClickSelectedCategory={ this.fetchByCategoryId }\n        />\n        {\n          showMessage ? emptySearchMessage : <ProductCard\n            products={ productsList }\n            addItemCart={ this.toggle }\n          />\n        }\n        <Link to=\"/shopping-cart\">\n          <button type=\"button\">\n            Carrinho { shoppingCart !== null ? shoppingCart.length : 0 }\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/projects/MyRepos/react-online-store/src/Pages/ProductDetails.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as api from '../services/api';\nimport RatingForm from '../Components/RatingForm';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      product: [],\n      shoppingCart: []\n    };\n    this.fetchCategory = this.fetchCategory.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n    this.setShoppingCart = this.setShoppingCart.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCategory();\n    this.setShoppingCart();\n  }\n\n  setShoppingCart() {\n    const {\n      location\n    } = this.props;\n    const {\n      state\n    } = location;\n\n    if (state) {\n      this.setState({\n        shoppingCart: [...state]\n      });\n    }\n  }\n\n  addToCart() {\n    const {\n      product,\n      shoppingCart\n    } = this.state;\n    product.quantity = 1;\n    this.setState({\n      shoppingCart: [...shoppingCart, product]\n    });\n  }\n\n  async fetchCategory() {\n    const {\n      match: {\n        params: {\n          categoryID,\n          id\n        }\n      }\n    } = this.props;\n    console.log(id);\n    const productObj = await api.getProductsFromCategoryAndQuery(categoryID, '');\n    console.log(productObj);\n    const productDetails = productObj.results.find(product => product.id === id);\n    console.log(productDetails);\n    this.setState({\n      product: productDetails\n    });\n  }\n\n  render() {\n    const {\n      product,\n      shoppingCart\n    } = this.state;\n    const {\n      title,\n      thumbnail,\n      price\n    } = product;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"product-detail-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, title, ' ', \"-\", ' '), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"R$\", ' ', price)), /*#__PURE__*/React.createElement(\"img\", {\n      src: thumbnail,\n      alt: \"product-thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(RatingForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      \"data-testid\": \"shopping-cart-button\",\n      to: {\n        pathname: '/shopping-cart',\n        state: shoppingCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Ir para carrinho\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"shopping-cart-size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, shoppingCart.length), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"product-detail-add-to-cart\",\n      onClick: this.addToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Adicionar ao Carrinho\"));\n  }\n\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.arrayOf()\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      categoryID: PropTypes.string,\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired\n};\nexport default ProductDetails;","map":{"version":3,"sources":["/home/marcelo/projects/MyRepos/react-online-store/src/Pages/ProductDetails.jsx"],"names":["React","PropTypes","Link","api","RatingForm","ProductDetails","Component","constructor","state","product","shoppingCart","fetchCategory","bind","addToCart","setShoppingCart","componentDidMount","location","props","setState","quantity","match","params","categoryID","id","console","log","productObj","getProductsFromCategoryAndQuery","productDetails","results","find","render","title","thumbnail","price","pathname","length","propTypes","shape","arrayOf","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as api from '../services/api';\nimport RatingForm from '../Components/RatingForm';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      product: [],\n      shoppingCart: [],\n    };\n    this.fetchCategory = this.fetchCategory.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n    this.setShoppingCart = this.setShoppingCart.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCategory();\n    this.setShoppingCart();\n  }\n\n  setShoppingCart() {\n    const { location } = this.props;\n    const { state } = location;\n    if (state) {\n      this.setState({ shoppingCart: [...state] });\n    }\n  }\n\n  addToCart() {\n    const { product, shoppingCart } = this.state;\n    product.quantity = 1;\n    this.setState({ shoppingCart: [...shoppingCart, product] });\n  }\n\n  async fetchCategory() {\n    const { match: { params: { categoryID, id } } } = this.props;\n    console.log(id);\n    const productObj = await api.getProductsFromCategoryAndQuery(categoryID, '');\n    console.log(productObj);\n    const productDetails = productObj.results\n      .find((product) => product.id === id);\n    console.log(productDetails);\n    this.setState({\n      product: productDetails,\n    });\n  }\n\n  render() {\n    const { product, shoppingCart } = this.state;\n    const { title, thumbnail, price } = product;\n    return (\n      <div>\n        <p>\n          <span data-testid=\"product-detail-name\">\n            { title }\n            {' '}\n            -\n            {' '}\n          </span>\n          <span>\n            R$\n            {' '}\n            { price }\n          </span>\n        </p>\n        <img src={ thumbnail } alt=\"product-thumbnail\" />\n        <RatingForm />\n        <Link\n          data-testid=\"shopping-cart-button\"\n          to={ {\n            pathname: '/shopping-cart',\n            state: shoppingCart,\n          } }\n        >\n          Ir para carrinho\n        </Link>\n        <span data-testid=\"shopping-cart-size\">{ shoppingCart.length }</span>\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ this.addToCart }\n        >\n          Adicionar ao Carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.arrayOf(),\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      categoryID: PropTypes.string,\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProductDetails;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/projects/MyRepos/react-online-store/src/Pages/ProductDetails.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as api from '../services/api';\nimport RatingForm from '../Components/RatingForm';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      product: [],\n      shoppingCart: []\n    }; // this.fetchCategory = this.fetchCategory.bind(this);\n\n    this.addToCart = this.addToCart.bind(this); // this.setShoppingCart = this.setShoppingCart.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCategory();\n    this.setShoppingCart();\n  } // setShoppingCart() {\n  //   const { location } = this.props;\n  //   const { state } = location;\n  //   if (state) {\n  //     this.setState({ shoppingCart: [...state] });\n  //   }\n  // }\n\n\n  addToCart() {\n    const {\n      product,\n      shoppingCart\n    } = this.state;\n    product.quantity = 1;\n    this.setState({\n      shoppingCart: [...shoppingCart, product]\n    });\n  } // async fetchCategory() {\n  //   const { match: { params: { categoryID, id } } } = this.props;\n  //   const productObj = await api.getProductsFromCategoryAndQuery(categoryID, '');\n  //   const productDetails = productObj.results\n  //     .find((product) => product.id === id);\n  //   this.setState({\n  //     product: productDetails,\n  //   });\n  // }\n\n\n  render() {\n    // const { product, shoppingCart } = this.state;\n    const product = JSON.parse(localStorage.getItem('currentItem'));\n    const shoppingCart = JSON.parse(localStorage.getItem('shoppingCart'));\n    const {\n      title,\n      thumbnail,\n      price\n    } = product;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"product-detail-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, title, ' ', \"-\", ' '), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"R$\", ' ', price)), /*#__PURE__*/React.createElement(\"img\", {\n      src: thumbnail,\n      alt: \"product-thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(RatingForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      \"data-testid\": \"shopping-cart-button\",\n      to: {\n        pathname: '/shopping-cart' // state: shoppingCart,\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Ir para carrinho\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"shopping-cart-size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, shoppingCart.length), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"product-detail-add-to-cart\",\n      onClick: this.addToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Adicionar ao Carrinho\"));\n  }\n\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.arrayOf()\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      categoryID: PropTypes.string,\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired\n};\nexport default ProductDetails;","map":{"version":3,"sources":["/home/marcelo/projects/MyRepos/react-online-store/src/Pages/ProductDetails.jsx"],"names":["React","PropTypes","Link","api","RatingForm","ProductDetails","Component","constructor","state","product","shoppingCart","addToCart","bind","componentDidMount","fetchCategory","setShoppingCart","quantity","setState","render","JSON","parse","localStorage","getItem","title","thumbnail","price","pathname","length","propTypes","location","shape","arrayOf","isRequired","match","params","categoryID","string","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as api from '../services/api';\nimport RatingForm from '../Components/RatingForm';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      product: [],\n      shoppingCart: [],\n    };\n    // this.fetchCategory = this.fetchCategory.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n    // this.setShoppingCart = this.setShoppingCart.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCategory();\n    this.setShoppingCart();\n  }\n\n  // setShoppingCart() {\n  //   const { location } = this.props;\n  //   const { state } = location;\n  //   if (state) {\n  //     this.setState({ shoppingCart: [...state] });\n  //   }\n  // }\n\n  addToCart() {\n    const { product, shoppingCart } = this.state;\n    product.quantity = 1;\n    this.setState({ shoppingCart: [...shoppingCart, product] });\n  }\n\n  // async fetchCategory() {\n  //   const { match: { params: { categoryID, id } } } = this.props;\n  //   const productObj = await api.getProductsFromCategoryAndQuery(categoryID, '');\n  //   const productDetails = productObj.results\n  //     .find((product) => product.id === id);\n  //   this.setState({\n  //     product: productDetails,\n  //   });\n  // }\n\n  render() {\n    // const { product, shoppingCart } = this.state;\n    const product = JSON.parse(localStorage.getItem('currentItem'));\n    const shoppingCart = JSON.parse(localStorage.getItem('shoppingCart'));\n    const { title, thumbnail, price } = product;\n    return (\n      <div>\n        <p>\n          <span data-testid=\"product-detail-name\">\n            { title }\n            {' '}\n            -\n            {' '}\n          </span>\n          <span>\n            R$\n            {' '}\n            { price }\n          </span>\n        </p>\n        <img src={ thumbnail } alt=\"product-thumbnail\" />\n        <RatingForm />\n        <Link\n          data-testid=\"shopping-cart-button\"\n          to={ {\n            pathname: '/shopping-cart',\n            // state: shoppingCart,\n          } }\n        >\n          Ir para carrinho\n        </Link>\n        <span data-testid=\"shopping-cart-size\">{ shoppingCart.length }</span>\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ this.addToCart }\n        >\n          Adicionar ao Carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.arrayOf(),\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      categoryID: PropTypes.string,\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProductDetails;\n"]},"metadata":{},"sourceType":"module"}
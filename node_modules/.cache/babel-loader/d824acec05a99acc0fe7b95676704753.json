{"ast":null,"code":"var _jsxFileName = \"/home/jhon/Trybe/Projects/sd-09-project-frontend-online-store/src/components/Home.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListOfCategories from './ListOfCategories';\nimport SearchBar from './SearchBar';\nimport ProductCard from './ProductCard';\nimport * as api from '../services/api';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      productsList: [],\n      categories: []\n    };\n    this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n    this.fetchApiSearch = this.fetchApiSearch.bind(this);\n    this.fetchByCategoryId = this.fetchByCategoryId.bind(this);\n  }\n\n  componentDidMount() {\n    api.getCategories().then(response => this.setState({\n      categories: response\n    }));\n  }\n\n  handleSearchTextChange({\n    target\n  }) {\n    const {\n      value\n    } = target;\n    this.setState({\n      searchText: value\n    });\n  }\n\n  async fetchByCategoryId(categoryId) {\n    // console.log(categoryId);\n    const fetchList = await api.getProductsFromCategoryAndQuery(categoryId, ''); // console.log(fetchList);\n\n    this.setState({\n      productsList: fetchList.results\n    });\n  }\n\n  async fetchApiSearch() {\n    const {\n      searchText\n    } = this.state;\n    const fetchList = await api.getProductsFromCategoryAndQuery('', searchText);\n\n    if (!fetchList.results.length) {\n      this.setState({\n        showMessage: true\n      });\n    } else {\n      this.setState({\n        productsList: fetchList.results,\n        showMessage: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      productsList,\n      showMessage,\n      categories\n    } = this.state;\n    const emptySearchMessage = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 32\n      }\n    }, \"Nenhum produto foi encontrado\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearchTextChange: this.handleSearchTextChange,\n      onClickSearch: this.fetchApiSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\"), /*#__PURE__*/React.createElement(ListOfCategories, {\n      categories: categories,\n      onClickSelectedCategory: this.fetchByCategoryId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), showMessage ? emptySearchMessage : /*#__PURE__*/React.createElement(ProductCard, {\n      products: productsList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/shopping-cart\",\n      \"data-testid\": \"shopping-cart-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Carrinho\")));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/jhon/Trybe/Projects/sd-09-project-frontend-online-store/src/components/Home.jsx"],"names":["React","Link","ListOfCategories","SearchBar","ProductCard","api","Home","Component","constructor","props","state","searchText","productsList","categories","handleSearchTextChange","bind","fetchApiSearch","fetchByCategoryId","componentDidMount","getCategories","then","response","setState","target","value","categoryId","fetchList","getProductsFromCategoryAndQuery","results","length","showMessage","render","emptySearchMessage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListOfCategories from './ListOfCategories';\nimport SearchBar from './SearchBar';\nimport ProductCard from './ProductCard';\nimport * as api from '../services/api';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      productsList: [],\n      categories: [],\n    };\n    this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n    this.fetchApiSearch = this.fetchApiSearch.bind(this);\n    this.fetchByCategoryId = this.fetchByCategoryId.bind(this);\n  }\n\n  componentDidMount() {\n    api.getCategories()\n      .then((response) => this.setState({ categories: response }));\n  }\n\n  handleSearchTextChange({ target }) {\n    const { value } = target;\n    this.setState({\n      searchText: value,\n    });\n  }\n\n  async fetchByCategoryId(categoryId) {\n    // console.log(categoryId);\n    const fetchList = await api.getProductsFromCategoryAndQuery(categoryId, '');\n    // console.log(fetchList);\n    this.setState({\n      productsList: fetchList.results,\n    });\n  }\n\n  async fetchApiSearch() {\n    const { searchText } = this.state;\n    const fetchList = await api.getProductsFromCategoryAndQuery('', searchText);\n\n    if (!fetchList.results.length) {\n      this.setState({\n        showMessage: true,\n      });\n    } else {\n      this.setState({\n        productsList: fetchList.results,\n        showMessage: false,\n      });\n    }\n  }\n\n  render() {\n    const { productsList, showMessage, categories } = this.state;\n    const emptySearchMessage = <p>Nenhum produto foi encontrado</p>;\n\n    return (\n      <div>\n        <SearchBar\n          onSearchTextChange={ this.handleSearchTextChange }\n          onClickSearch={ this.fetchApiSearch }\n        />\n\n        <p\n          data-testid=\"home-initial-message\"\n        >\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n\n        <ListOfCategories\n          categories={ categories }\n          onClickSelectedCategory={ this.fetchByCategoryId }\n        />\n\n        {\n          showMessage ? emptySearchMessage : <ProductCard\n            products={ productsList }\n          />\n        }\n\n        <button type=\"button\">\n          <Link\n            to=\"/shopping-cart\"\n            data-testid=\"shopping-cart-button\"\n          >\n            Carrinho\n          </Link>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
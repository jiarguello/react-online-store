{"ast":null,"code":"var _jsxFileName = \"/home/jhon/Projetos/React-Online-Store/src/Pages/Home.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListOfCategories from '../Components/ListOfCategories';\nimport SearchBar from '../Components/SearchBar';\nimport ProductCard from '../Components/ProductCard';\nimport * as api from '../services/api';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      productsList: [],\n      categories: [],\n      addItem: []\n    };\n    this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n    this.fetchApiSearch = this.fetchApiSearch.bind(this);\n    this.fetchByCategoryId = this.fetchByCategoryId.bind(this);\n    this.addItemCart = this.addItemCart.bind(this);\n  }\n\n  componentDidMount() {\n    api.getCategories().then(response => this.setState({\n      categories: response\n    }));\n  }\n\n  handleSearchTextChange({\n    target\n  }) {\n    const {\n      value\n    } = target;\n    this.setState({\n      searchText: value\n    });\n  }\n\n  addItemCart(id) {\n    const {\n      productsList,\n      addItem\n    } = this.state;\n    const itemProduct = productsList.find(item => id === item.id);\n    itemProduct.quantity = 1;\n    this.setState({\n      addItem: [...addItem, itemProduct]\n    });\n  }\n\n  async fetchByCategoryId(categoryId) {\n    const fetchList = await api.getProductsFromCategoryAndQuery(categoryId, '');\n    this.setState({\n      productsList: fetchList.results\n    });\n  }\n\n  async fetchApiSearch() {\n    const {\n      searchText\n    } = this.state;\n    const fetchList = await api.getProductsFromCategoryAndQuery('', searchText);\n\n    if (!fetchList.results.length) {\n      this.setState({\n        showMessage: true\n      });\n    } else {\n      this.setState({\n        productsList: fetchList.results,\n        showMessage: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      productsList,\n      showMessage,\n      categories,\n      addItem\n    } = this.state;\n    const emptySearchMessage = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 32\n      }\n    }, \"Nenhum produto foi encontrado\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearchTextChange: this.handleSearchTextChange,\n      onClickSearch: this.fetchApiSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\"), /*#__PURE__*/React.createElement(ListOfCategories, {\n      categories: categories,\n      onClickSelectedCategory: this.fetchByCategoryId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), showMessage ? emptySearchMessage : /*#__PURE__*/React.createElement(ProductCard, {\n      products: productsList,\n      onClick: this.addItemCart,\n      cartItens: addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/shopping-cart',\n        state: addItem\n      },\n      \"data-testid\": \"shopping-cart-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Carrinho\", /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"shopping-cart-size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, addItem.length))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/jhon/Projetos/React-Online-Store/src/Pages/Home.jsx"],"names":["React","Link","ListOfCategories","SearchBar","ProductCard","api","Home","Component","constructor","props","state","searchText","productsList","categories","addItem","handleSearchTextChange","bind","fetchApiSearch","fetchByCategoryId","addItemCart","componentDidMount","getCategories","then","response","setState","target","value","id","itemProduct","find","item","quantity","categoryId","fetchList","getProductsFromCategoryAndQuery","results","length","showMessage","render","emptySearchMessage","pathname"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListOfCategories from '../Components/ListOfCategories';\nimport SearchBar from '../Components/SearchBar';\nimport ProductCard from '../Components/ProductCard';\nimport * as api from '../services/api';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      productsList: [],\n      categories: [],\n      addItem: [],\n    };\n    this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n    this.fetchApiSearch = this.fetchApiSearch.bind(this);\n    this.fetchByCategoryId = this.fetchByCategoryId.bind(this);\n    this.addItemCart = this.addItemCart.bind(this);\n  }\n\n  componentDidMount() {\n    api.getCategories()\n      .then((response) => this.setState({ categories: response }));\n  }\n\n  handleSearchTextChange({ target }) {\n    const { value } = target;\n    this.setState({\n      searchText: value,\n    });\n  }\n\n  addItemCart(id) {\n    const { productsList, addItem } = this.state;\n    const itemProduct = productsList.find((item) => id === item.id);\n    itemProduct.quantity = 1;\n    this.setState({\n      addItem: [...addItem, itemProduct],\n    });\n  }\n\n  async fetchByCategoryId(categoryId) {\n    const fetchList = await api.getProductsFromCategoryAndQuery(categoryId, '');\n    this.setState({\n      productsList: fetchList.results,\n    });\n  }\n\n  async fetchApiSearch() {\n    const { searchText } = this.state;\n    const fetchList = await api.getProductsFromCategoryAndQuery('', searchText);\n\n    if (!fetchList.results.length) {\n      this.setState({\n        showMessage: true,\n      });\n    } else {\n      this.setState({\n        productsList: fetchList.results,\n        showMessage: false,\n      });\n    }\n  }\n\n  render() {\n    const { productsList, showMessage, categories, addItem } = this.state;\n    const emptySearchMessage = <p>Nenhum produto foi encontrado</p>;\n    return (\n      <div>\n        <SearchBar\n          onSearchTextChange={ this.handleSearchTextChange }\n          onClickSearch={ this.fetchApiSearch }\n        />\n\n        <p\n          data-testid=\"home-initial-message\"\n        >\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n\n        <ListOfCategories\n          categories={ categories }\n          onClickSelectedCategory={ this.fetchByCategoryId }\n        />\n\n        {\n          showMessage ? emptySearchMessage : <ProductCard\n            products={ productsList }\n            onClick={ this.addItemCart }\n            cartItens={ addItem }\n          />\n        }\n\n        <button type=\"button\">\n          <Link\n            to={ {\n              pathname: '/shopping-cart',\n              state: addItem,\n            } }\n            data-testid=\"shopping-cart-button\"\n          >\n            Carrinho\n            <span data-testid=\"shopping-cart-size\">{ addItem.length }</span>\n          </Link>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
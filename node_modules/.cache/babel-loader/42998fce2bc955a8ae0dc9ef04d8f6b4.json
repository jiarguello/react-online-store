{"ast":null,"code":"var _jsxFileName = \"/home/jhon/Projetos/React-Online-Store/src/Components/ProductCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setCurrentProduct = this.setCurrentProduct.bind(this);\n  }\n\n  setCurrentProduct(product) {\n    localStorage.setItem('currentItem', JSON.stringify(product));\n  }\n\n  render() {\n    const {\n      products,\n      cartItens\n    } = this.props;\n    const isFreeShipping = /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 28\n      }\n    }, \"Frete Gratis!\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pai\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, products.map(element => {\n      const {\n        id,\n        title,\n        thumbnail,\n        price,\n        category_id: categoryId,\n        shipping: {\n          free_shipping: freeShipping\n        }\n      } = element;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product\",\n        \"data-testid\": \"product\",\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }\n      }, title), /*#__PURE__*/React.createElement(\"img\", {\n        src: thumbnail,\n        alt: \"produto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, price), freeShipping ? isFreeShipping : '', /*#__PURE__*/React.createElement(\"button\", {\n        \"data-testid\": \"product-add-to-cart\",\n        type: \"button\",\n        onClick: () => {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }, \"Comprar\"), /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: `product-detail/${categoryId}/${id}`,\n          state: [...cartItens]\n        },\n        \"data-testid\": \"product-detail-link\",\n        onClick: () => this.setCurrentProduct(element),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, \"Ver detalhes\"));\n    }));\n  }\n\n}\n\nProductCard.propTypes = {\n  cartItens: PropTypes.arrayOf().isRequired,\n  products: PropTypes.arrayOf().isRequired,\n  onClick: PropTypes.func.isRequired\n};\nexport default ProductCard;","map":{"version":3,"sources":["/home/jhon/Projetos/React-Online-Store/src/Components/ProductCard.jsx"],"names":["React","PropTypes","Link","ProductCard","Component","constructor","props","setCurrentProduct","bind","product","localStorage","setItem","JSON","stringify","render","products","cartItens","isFreeShipping","map","element","id","title","thumbnail","price","category_id","categoryId","shipping","free_shipping","freeShipping","pathname","state","propTypes","arrayOf","isRequired","onClick","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDD,EAAAA,iBAAiB,CAACE,OAAD,EAAU;AACzBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAApC;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0B,KAAKV,KAArC;AACA,UAAMW,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIF,QAAQ,CACLG,GADH,CACQC,OAAD,IAAa;AAChB,YAAM;AACJC,QAAAA,EADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA,SAHI;AAIJC,QAAAA,KAJI;AAKJC,QAAAA,WAAW,EAAEC,UALT;AAMJC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,aAAa,EAAEC;AAAjB;AANN,UAOFT,OAPJ;AAQA,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,uBAAY,SAArC;AAA+C,QAAA,GAAG,EAAGC,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,KAAL,CADF,eAEE;AAAK,QAAA,GAAG,EAAGC,SAAX;AAAuB,QAAA,GAAG,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,KAAL,CAHF,EAIKK,YAAD,GAAiBX,cAAjB,GAAkC,EAJtC,eAKE;AACE,uBAAY,qBADd;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAG,MAAM,CAAG,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,eAYE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAG;AACHY,UAAAA,QAAQ,EAAG,kBAAiBJ,UAAW,IAAGL,EAAG,EAD1C;AAEHU,UAAAA,KAAK,EAAE,CAAC,GAAGd,SAAJ;AAFJ,SADP;AAKE,uBAAY,qBALd;AAME,QAAA,OAAO,EAAG,MAAM,KAAKT,iBAAL,CAAuBY,OAAvB,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF,CADF;AAyBD,KAnCH,CAFJ,CADF;AA0CD;;AAvDuC;;AA0D1ChB,WAAW,CAAC4B,SAAZ,GAAwB;AACtBf,EAAAA,SAAS,EAAEf,SAAS,CAAC+B,OAAV,GAAoBC,UADT;AAEtBlB,EAAAA,QAAQ,EAAEd,SAAS,CAAC+B,OAAV,GAAoBC,UAFR;AAGtBC,EAAAA,OAAO,EAAEjC,SAAS,CAACkC,IAAV,CAAeF;AAHF,CAAxB;AAMA,eAAe9B,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setCurrentProduct = this.setCurrentProduct.bind(this);\n  }\n\n  setCurrentProduct(product) {\n    localStorage.setItem('currentItem', JSON.stringify(product));\n  }\n\n  render() {\n    const { products, cartItens } = this.props;\n    const isFreeShipping = <span>Frete Gratis!</span>;\n    return (\n      <div className=\"pai\">\n        {\n          products\n            .map((element) => {\n              const {\n                id,\n                title,\n                thumbnail,\n                price,\n                category_id: categoryId,\n                shipping: { free_shipping: freeShipping },\n              } = element;\n              return (\n                <div className=\"product\" data-testid=\"product\" key={ id }>\n                  <p>{ title }</p>\n                  <img src={ thumbnail } alt=\"produto\" />\n                  <p>{ price }</p>\n                  { (freeShipping) ? isFreeShipping : '' }\n                  <button\n                    data-testid=\"product-add-to-cart\"\n                    type=\"button\"\n                    onClick={ () => { } }\n                  >\n                    Comprar\n                  </button>\n                  <Link\n                    to={ {\n                      pathname: `product-detail/${categoryId}/${id}`,\n                      state: [...cartItens],\n                    } }\n                    data-testid=\"product-detail-link\"\n                    onClick={ () => this.setCurrentProduct(element) }\n                  >\n                    Ver detalhes\n                  </Link>\n              </div>\n              )\n            })\n        }\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  cartItens: PropTypes.arrayOf().isRequired,\n  products: PropTypes.arrayOf().isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jhon/Projetos/React-Online-Store/src/Components/ProductCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as S from '../CSS/S.ProductCard';\n\nclass ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setCurrentProduct = this.setCurrentProduct.bind(this);\n  }\n\n  setCurrentProduct(product) {\n    localStorage.setItem('currentItem', JSON.stringify(product));\n  }\n\n  render() {\n    const {\n      products,\n      cartItens\n    } = this.props;\n    const isFreeShipping = /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 28\n      }\n    }, \"Frete Gratis!\");\n    return /*#__PURE__*/React.createElement(S.Section, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, products.map(element => {\n      const {\n        id,\n        title,\n        thumbnail,\n        price,\n        category_id: categoryId,\n        shipping: {\n          free_shipping: freeShipping\n        }\n      } = element;\n      const priceLocale = price.toLocaleString('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      });\n      return /*#__PURE__*/React.createElement(S.Div, {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(S.P, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, title), /*#__PURE__*/React.createElement(S.Img, {\n        src: thumbnail,\n        alt: \"produto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }, priceLocale), freeShipping ? isFreeShipping : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 55\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        \"data-testid\": \"product-add-to-cart\",\n        type: \"button\",\n        onClick: () => {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }, \"Comprar\"), /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: `product-detail/${categoryId}/${id}`,\n          state: [...cartItens]\n        },\n        \"data-testid\": \"product-detail-link\",\n        onClick: () => this.setCurrentProduct(element),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }, \"Ver detalhes\"));\n    }));\n  }\n\n}\n\nProductCard.propTypes = {\n  cartItens: PropTypes.arrayOf().isRequired,\n  products: PropTypes.arrayOf().isRequired,\n  onClick: PropTypes.func.isRequired\n};\nexport default ProductCard;","map":{"version":3,"sources":["/home/jhon/Projetos/React-Online-Store/src/Components/ProductCard.jsx"],"names":["React","PropTypes","Link","S","ProductCard","Component","constructor","props","setCurrentProduct","bind","product","localStorage","setItem","JSON","stringify","render","products","cartItens","isFreeShipping","map","element","id","title","thumbnail","price","category_id","categoryId","shipping","free_shipping","freeShipping","priceLocale","toLocaleString","style","currency","pathname","state","propTypes","arrayOf","isRequired","onClick","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as S from '../CSS/S.ProductCard';\n\nclass ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setCurrentProduct = this.setCurrentProduct.bind(this);\n  }\n\n  setCurrentProduct(product) {\n    localStorage.setItem('currentItem', JSON.stringify(product));\n  }\n\n  render() {\n    const { products, cartItens } = this.props;\n    const isFreeShipping = <span>Frete Gratis!</span>;\n    return (\n      <S.Section>\n        {\n          products\n            .map((element) => {\n              const {\n                id,\n                title,\n                thumbnail,\n                price,\n                category_id: categoryId,\n                shipping: { free_shipping: freeShipping },\n              } = element;\n              const priceLocale = price.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })\n              return (\n                <S.Div key={ id }>\n                  <S.P>{ title }</S.P>\n                  <S.Img src={ thumbnail } alt=\"produto\" />\n                  <p>{ priceLocale }</p>\n                  { (freeShipping) ? isFreeShipping : <p></p> }\n                  <button\n                    data-testid=\"product-add-to-cart\"\n                    type=\"button\"\n                    onClick={ () => { } }\n                  >\n                    Comprar\n                  </button>\n                  <Link\n                    to={ {\n                      pathname: `product-detail/${categoryId}/${id}`,\n                      state: [...cartItens],\n                    } }\n                    data-testid=\"product-detail-link\"\n                    onClick={ () => this.setCurrentProduct(element) }\n                  >\n                    Ver detalhes\n                  </Link>\n              </S.Div>\n              )\n            })\n        }\n      </S.Section>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  cartItens: PropTypes.arrayOf().isRequired,\n  products: PropTypes.arrayOf().isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}
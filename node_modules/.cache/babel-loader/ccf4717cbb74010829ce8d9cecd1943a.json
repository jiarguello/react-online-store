{"ast":null,"code":"import React from'react';import*as S from'../CSS/S.OrderSummary';export var localeCurrency=function localeCurrency(value){return value.toLocaleString('pt-BR',{style:'currency',currency:'BRL'});};export var inputsGenerator=function inputsGenerator(type,name,placeholder){return/*#__PURE__*/React.createElement(S.Input,{type:type,name:name,id:\"\".concat(name,\"-input\"),placeholder:placeholder,required:true});};export var paymentMethodInputs=function paymentMethodInputs(type){var method=wordFormater(type);return/*#__PURE__*/React.createElement(\"label\",{htmlFor:method},method,/*#__PURE__*/React.createElement(\"input\",{id:method,type:\"radio\",name:\"payment\",value:method}));};var wordFormater=function wordFormater(word){var lower=word.toLowerCase();var formated=lower[0].toUpperCase()+lower.substr(1);return formated;};","map":{"version":3,"sources":["/home/jhon/Projetos/react-online-store/src/services/helpers.js"],"names":["React","S","localeCurrency","value","toLocaleString","style","currency","inputsGenerator","type","name","placeholder","paymentMethodInputs","method","wordFormater","word","lower","toLowerCase","formated","toUpperCase","substr"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,uBAAnB,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CACvC,MAAOA,CAAAA,KAAK,CAACC,cAAN,CAAqB,OAArB,CAA8B,CAAEC,KAAK,CAAE,UAAT,CAAqBC,QAAQ,CAAE,KAA/B,CAA9B,CAAP,CACD,CAFM,CAIP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAOC,IAAP,CAAaC,WAAb,CAA6B,CAC1D,mBACE,oBAAC,CAAD,CAAG,KAAH,EACE,IAAI,CAAGF,IADT,CAEE,IAAI,CAAGC,IAFT,CAGE,EAAE,WAAMA,IAAN,UAHJ,CAIE,WAAW,CAAGC,WAJhB,CAKE,QAAQ,KALV,EADF,CASD,CAVM,CAYP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACH,IAAD,CAAU,CAC3C,GAAMI,CAAAA,MAAM,CAAGC,YAAY,CAACL,IAAD,CAA3B,CACA,mBACE,6BAAO,OAAO,CAAGI,MAAjB,EACEA,MADF,cAEA,6BACE,EAAE,CAAGA,MADP,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAC,SAHP,CAIE,KAAK,CAAGA,MAJV,EAFA,CADF,CAWD,CAbM,CAeP,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAU,CAC7B,GAAMC,CAAAA,KAAK,CAAGD,IAAI,CAACE,WAAL,EAAd,CACA,GAAMC,CAAAA,QAAQ,CAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,WAAT,GAAyBH,KAAK,CAACI,MAAN,CAAa,CAAb,CAA1C,CACA,MAAOF,CAAAA,QAAP,CACD,CAJD","sourcesContent":["import React from 'react';\nimport * as S from '../CSS/S.OrderSummary';\n\nexport const localeCurrency = (value) => {\n  return value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })\n}\n\nexport const inputsGenerator = (type, name, placeholder) => {\n  return (\n    <S.Input\n      type={ type }\n      name={ name }\n      id={ `${name}-input` }\n      placeholder={ placeholder }\n      required\n    />\n  )\n}\n\nexport const paymentMethodInputs = (type) => {\n  const method = wordFormater(type);\n  return (\n    <label htmlFor={ method }>\n    { method }\n    <input\n      id={ method }\n      type=\"radio\"\n      name=\"payment\"\n      value={ method }\n    />\n    </label>\n  );\n}\n\nconst wordFormater = (word) => {\n  const lower = word.toLowerCase()\n  const formated = lower[0].toUpperCase() + lower.substr(1);\n  return formated\n}\n"]},"metadata":{},"sourceType":"module"}
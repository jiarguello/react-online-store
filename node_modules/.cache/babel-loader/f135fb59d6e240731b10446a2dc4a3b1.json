{"ast":null,"code":"var _jsxFileName = \"/home/jhon/Projetos/react-online-store/src/Pages/ShoppingCart.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalPrice: 0\n    };\n    this.totalPrice = this.totalPrice.bind(this);\n    this.increaseProductQuantity = this.increaseProductQuantity.bind(this);\n    this.decreaseProductQuantity = this.decreaseProductQuantity.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.renderEmptyCart = this.renderEmptyCart.bind(this);\n    this.renderTotalPrice = this.renderTotalPrice.bind(this);\n    this.renderCheckoutButton = this.renderCheckoutButton.bind(this);\n  }\n\n  componentDidMount() {\n    this.totalPrice();\n  }\n\n  totalPrice() {\n    const listOfProducts = JSON.parse(localStorage.getItem('shoppingCart'));\n    const total = listOfProducts.reduce((acc, product) => acc + product.price * product.quantity, 0);\n    this.setState({\n      totalPrice: total\n    });\n  }\n\n  increaseProductQuantity(id) {\n    const listOfProducts = JSON.parse(localStorage.getItem('shoppingCart'));\n    const newCart = listOfProducts.map(item => {\n      const {\n        available_quantity: availableQuantity\n      } = item;\n\n      if (item.id === id && availableQuantity > item.quantity) {\n        item.quantity += 1;\n        return item;\n      }\n\n      return item;\n    });\n    localStorage.setItem('shoppingCart', JSON.stringify(newCart));\n    this.totalPrice();\n  }\n\n  decreaseProductQuantity(id) {\n    const listOfProducts = JSON.parse(localStorage.getItem('shoppingCart'));\n    const item = listOfProducts.find(product => product.id === id);\n\n    if (item.quantity !== 0) {\n      item.quantity -= 1;\n    }\n\n    localStorage.setItem('shoppingCart', JSON.stringify(listOfProducts));\n    this.totalPrice();\n  }\n\n  deleteProduct(id) {\n    const listOfProducts = JSON.parse(localStorage.getItem('shoppingCart'));\n    const itemToRemove = listOfProducts.find(product => product.id === id);\n    const index = listOfProducts.indexOf(itemToRemove);\n    listOfProducts.splice(index, 1);\n    localStorage.setItem('shoppingCart', JSON.stringify(listOfProducts));\n    this.totalPrice();\n  }\n\n  renderEmptyCart() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Seu carrinho est\\xE1 vazio\"));\n  }\n\n  renderTotalPrice() {\n    const {\n      totalPrice\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, \"O valor total da compra: R$ \", totalPrice, \".\");\n  }\n\n  renderCheckoutButton() {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: \"/order-summary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Revisar Compra\"));\n  }\n\n  render() {\n    const listOfProducts = JSON.parse(localStorage.getItem('shoppingCart'));\n    const emptyCart = this.renderEmptyCart();\n    if (listOfProducts.length === 0) return emptyCart;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, listOfProducts.map(({\n      title,\n      thumbnail,\n      quantity,\n      id,\n      price\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.deleteProduct(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: thumbnail,\n      alt: `foto ${title}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.decreaseProductQuantity(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, quantity), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.increaseProductQuantity(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"R$ \", price)))), this.renderTotalPrice(), this.renderCheckoutButton());\n  }\n\n}\n\nShoppingCart.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.arrayOf()\n  }).isRequired\n};\nexport default ShoppingCart;","map":{"version":3,"sources":["/home/jhon/Projetos/react-online-store/src/Pages/ShoppingCart.jsx"],"names":["React","PropTypes","Link","ShoppingCart","Component","constructor","props","state","totalPrice","bind","increaseProductQuantity","decreaseProductQuantity","deleteProduct","renderEmptyCart","renderTotalPrice","renderCheckoutButton","componentDidMount","listOfProducts","JSON","parse","localStorage","getItem","total","reduce","acc","product","price","quantity","setState","id","newCart","map","item","available_quantity","availableQuantity","setItem","stringify","find","itemToRemove","index","indexOf","splice","render","emptyCart","length","title","thumbnail","propTypes","location","shape","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalPrice: 0,\n    };\n    this.totalPrice = this.totalPrice.bind(this);\n    this.increaseProductQuantity = this.increaseProductQuantity.bind(this);\n    this.decreaseProductQuantity = this.decreaseProductQuantity.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.renderEmptyCart = this.renderEmptyCart.bind(this);\n    this.renderTotalPrice = this.renderTotalPrice.bind(this);\n    this.renderCheckoutButton = this.renderCheckoutButton.bind(this);\n  }\n\n  componentDidMount() {\n    this.totalPrice();\n  }\n\n  totalPrice() {\n    const listOfProducts = JSON.parse(localStorage.getItem('shoppingCart'));\n    const total = listOfProducts\n      .reduce((acc, product) => acc + (product.price * product.quantity), 0);\n    this.setState({\n      totalPrice: total,\n    });\n  }\n\n  increaseProductQuantity(id) {\n    const listOfProducts = JSON.parse(localStorage.getItem('shoppingCart'));\n    const newCart = listOfProducts.map((item) => {\n      const { available_quantity: availableQuantity } = item;\n      if (item.id === id && availableQuantity > item.quantity) {\n        item.quantity += 1;\n        return item;\n      }\n      return item;\n    });\n    localStorage.setItem('shoppingCart', JSON.stringify(newCart));\n    this.totalPrice();\n  }\n\n  decreaseProductQuantity(id) {\n    const listOfProducts = JSON.parse(localStorage.getItem('shoppingCart'));\n    const item = listOfProducts.find((product) => product.id === id);\n    if (item.quantity !== 0) {\n      item.quantity -= 1;\n    }\n    localStorage.setItem('shoppingCart', JSON.stringify(listOfProducts));\n    this.totalPrice();\n  }\n\n  deleteProduct(id) {\n    const listOfProducts = JSON.parse(localStorage.getItem('shoppingCart'));\n    const itemToRemove = listOfProducts.find((product) => product.id === id);\n    const index = listOfProducts.indexOf(itemToRemove);\n    listOfProducts.splice(index, 1);\n    localStorage.setItem('shoppingCart', JSON.stringify(listOfProducts));\n    this.totalPrice();\n  }\n\n  renderEmptyCart() {\n    return (\n      <section>\n        <p>\n          Seu carrinho está vazio\n        </p>\n      </section>\n    );\n  }\n\n  renderTotalPrice() {\n    const { totalPrice } = this.state;\n    return (\n      <p>\n        O valor total da compra: R$ { totalPrice }.\n      </p>\n    );\n  }\n\n  renderCheckoutButton() {\n    return (\n      <Link to=\"/order-summary\">\n        <button\n          type=\"button\"\n        >\n          Revisar Compra\n        </button>\n      </Link>\n    );\n  }\n\n  render() {\n    const listOfProducts = JSON.parse(localStorage.getItem('shoppingCart'));\n    const emptyCart = this.renderEmptyCart();\n    if (listOfProducts.length === 0) return emptyCart;\n    return (\n      <div>\n        {\n          listOfProducts.map(({ title, thumbnail, quantity, id, price }) => (\n            <div key={ id }>\n              <button\n                type=\"button\"\n                onClick={ () => this.deleteProduct(id) }\n              >\n                X\n              </button>\n              <img\n                src={ thumbnail }\n                alt={ `foto ${title}` }\n              />\n              <p>{ title }</p>\n              <div>\n                <button\n                  type=\"button\"\n                  onClick={ () => this.decreaseProductQuantity(id) }\n                >\n                  -\n                </button>\n                <p>{ quantity }</p>\n                <button\n                  type=\"button\"\n                  onClick={ () => this.increaseProductQuantity(id) }\n                >\n                  +\n                </button>\n                <span>R$ { price }</span>\n              </div>\n            </div>\n          ))\n        }\n        { this.renderTotalPrice() }\n        { this.renderCheckoutButton() }\n      </div>\n    );\n  }\n}\n\nShoppingCart.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.arrayOf(),\n  }).isRequired,\n};\n\nexport default ShoppingCart;\n"]},"metadata":{},"sourceType":"module"}
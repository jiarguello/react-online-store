{"ast":null,"code":"var _jsxFileName = \"/home/jhon/Trybe/Projects/sd-09-project-frontend-online-store/src/components/ShoppingCart.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location\n    } = this.props;\n    const {\n      state\n    } = location;\n    this.state = {\n      listOfProducts: [...state]\n    };\n    this.increaseProductQuantity = this.increaseProductQuantity.bind(this);\n    this.decreaseProductQuantity = this.decreaseProductQuantity.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.renderEmptyCart = this.renderEmptyCart.bind(this);\n  }\n\n  increaseProductQuantity(id) {\n    const {\n      listOfProducts\n    } = this.state;\n    const item = listOfProducts.find(product => product.id === id).quantity += 1;\n    this.setState({\n      listOfProducts: listOfProducts\n    });\n  }\n\n  decreaseProductQuantity(id) {\n    const {\n      listOfProducts\n    } = this.state;\n    const item = listOfProducts.find(product => product.id === id);\n\n    if (item.quantity === 0) {\n      return item.quantity = 0;\n    }\n\n    item.quantity -= 1;\n    console.log(item.quantity);\n  }\n\n  deleteProduct() {\n    console.log('clicou');\n  }\n\n  renderEmptyCart() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"shopping-cart-empty-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Seu carrinho est\\xE1 vazio\"));\n  } // COLOCAR O PRECO TOTAL E O PRECO POR ITEM...\n\n\n  render() {\n    const {\n      listOfProducts\n    } = this.state;\n    const emptyCart = this.renderEmptyCart();\n    if (listOfProducts.length === 0) return emptyCart;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, listOfProducts.map(({\n      title,\n      thumbnail,\n      quantity,\n      id\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.deleteProduct,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: thumbnail,\n      alt: `foto ${title}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"shopping-cart-product-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"product-decrease-quantity\",\n      onClick: () => this.decreaseProductQuantity(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"shopping-cart-product-quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, quantity), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"product-increase-quantity\",\n      onClick: () => this.increaseProductQuantity(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Pre\\xE7o do produto: \")))));\n  }\n\n}\n\nShoppingCart.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.arrayOf()\n  }).isRequired\n};\nexport default ShoppingCart;","map":{"version":3,"sources":["/home/jhon/Trybe/Projects/sd-09-project-frontend-online-store/src/components/ShoppingCart.jsx"],"names":["React","PropTypes","ShoppingCart","Component","constructor","props","location","state","listOfProducts","increaseProductQuantity","bind","decreaseProductQuantity","deleteProduct","renderEmptyCart","id","item","find","product","quantity","setState","console","log","render","emptyCart","length","map","title","thumbnail","propTypes","shape","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n    const { location } = this.props;\n    const { state } = location;\n    this.state = {\n      listOfProducts: [...state],\n    };\n    this.increaseProductQuantity = this.increaseProductQuantity.bind(this);\n    this.decreaseProductQuantity = this.decreaseProductQuantity.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.renderEmptyCart = this.renderEmptyCart.bind(this);\n  }\n\n  increaseProductQuantity(id) {\n    const { listOfProducts } = this.state;\n    const item = listOfProducts.find((product) => product.id === id).quantity += 1;\n    this.setState({\n      listOfProducts: listOfProducts,\n    });\n  }\n\n  decreaseProductQuantity(id) {\n    const { listOfProducts } = this.state;\n    const item = listOfProducts.find((product) => product.id === id);\n\n    if (item.quantity === 0) {\n      return item.quantity = 0;\n    }\n    item.quantity -= 1;\n    console.log(item.quantity);\n  }\n\n  deleteProduct() {\n    console.log('clicou');\n  }\n\n  renderEmptyCart() {\n    return (\n      <section>\n        <p data-testid=\"shopping-cart-empty-message\">\n          Seu carrinho est√° vazio\n        </p>\n      </section>\n    );\n  }\n\n  // COLOCAR O PRECO TOTAL E O PRECO POR ITEM...\n\n  render() {\n    const { listOfProducts } = this.state;\n    const emptyCart = this.renderEmptyCart();\n    if (listOfProducts.length === 0) return emptyCart;\n    return (\n      <div>\n        {\n          listOfProducts.map(({ title, thumbnail, quantity, id }) => (\n            <div key={ id }>\n              <button\n                type=\"button\"\n                onClick={ this.deleteProduct }\n              >\n                X\n              </button>\n              <img\n                src={ thumbnail }\n                alt={ `foto ${title}` }\n              />\n              <p data-testid=\"shopping-cart-product-name\">{ title }</p>\n              <div>\n                <button\n                  type=\"button\"\n                  data-testid=\"product-decrease-quantity\"\n                  onClick={ () => this.decreaseProductQuantity(id) }\n                >\n                  -\n                </button>\n                <p data-testid=\"shopping-cart-product-quantity\">{ quantity }</p>\n                <button\n                  type=\"button\"\n                  data-testid=\"product-increase-quantity\"\n                  onClick={ () => this.increaseProductQuantity(id) }\n                >\n                  +\n                </button>\n\n                <p>Pre√ßo do produto: </p>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nShoppingCart.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.arrayOf(),\n  }).isRequired,\n};\n\nexport default ShoppingCart;\n"]},"metadata":{},"sourceType":"module"}
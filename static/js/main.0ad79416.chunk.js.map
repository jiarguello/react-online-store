{"version":3,"sources":["Components/Loading.jsx","Components/ListOfCategories.jsx","CSS/S.SearchBar.jsx","Components/SearchBar.jsx","Components/ProductCard.jsx","services/api.js","Pages/Home.jsx","Pages/ShoppingCart.jsx","Components/RatingForm.jsx","Pages/ProductDetails.jsx","Pages/OrderSummary.jsx","App.js","serviceWorker.js","index.js"],"names":["Loading","Component","ListOfCategories","this","props","categories","onClickSelectedCategory","map","elem","onClick","id","key","type","data-testid","value","name","React","SearchButton","styled","button","Div","div","Input","input","SearchBar","onSearchTextChange","onClickSearch","onChange","placeholder","ProductCard","products","cartItens","isFreeShipping","className","title","thumbnail","price","categoryId","category_id","freeShipping","shipping","free_shipping","src","alt","to","pathname","state","a","fetch","then","response","json","getProductsFromCategoryAndQuery","query","API_URL","Home","searchText","productsList","addItem","handleSearchTextChange","bind","fetchApiSearch","fetchByCategoryId","addItemCart","api","setState","target","itemProduct","find","item","quantity","fetchList","results","length","showMessage","emptySearchMessage","ShoppingCart","location","listOfProducts","totalPrice","increaseProductQuantity","decreaseProductQuantity","deleteProduct","renderEmptyCart","renderTotalPrice","renderCheckoutButton","total","reduce","acc","product","newCart","availableQuantity","available_quantity","removeItem","index","indexOf","splice","emptyCart","RatingForm","handleChange","email","rating","comment","htmlFor","required","event","min","max","step","rows","cols","ProductDetails","shoppingCart","fetchCategory","addToCart","setShoppingCart","match","params","categoryID","productObj","productDetails","OrderSummary","order","productsReview","buyerInfos","paymentMethod","console","log","renderForm","App","basename","process","exact","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gWAUeA,E,uKANX,OACE,kD,GAHgBC,aCgCPC,E,uKA7BH,IAAD,EACyCC,KAAKC,MAA7CC,EADD,EACCA,WAAYC,EADb,EACaA,wBACpB,OAAmB,IAAfD,EAAyB,kBAAC,EAAD,MAE3B,6BACE,0CAEEA,EAAWE,KAAI,SAACC,GAAD,OACb,4BACEC,QAAU,kBAAMH,EAAwBE,EAAKE,KAC7CC,IAAMH,EAAKE,GACXE,KAAK,SACLC,cAAY,WACZC,MAAQN,EAAKO,MAEXP,EAAKO,c,GAhBUC,IAAMf,W,+SCF9B,IAAMgB,EAAeC,IAAOC,OAAV,KAGZC,EAAMF,IAAOG,IAAV,KAIHC,EAAQJ,IAAOK,MAAV,KCsBHC,E,uKA1BH,IAAD,EACuCrB,KAAKC,MAA3CqB,EADD,EACCA,mBAAoBC,EADrB,EACqBA,cAC5B,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEd,KAAK,OACLe,SAAWF,EACXV,KAAK,SACLa,YAAY,+BAEd,kBAAC,EAAD,CACEhB,KAAK,SACLH,QAAUiB,GAFZ,e,GAXgBV,IAAMf,WCoDf4B,E,uKAnDH,IAAD,EACkC1B,KAAKC,MAAtC0B,EADD,EACCA,SAAUrB,EADX,EACWA,QAASsB,EADpB,EACoBA,UACrBC,EAAiB,0BAAMnB,cAAY,iBAAlB,iBACvB,OACE,yBAAKoB,UAAU,OAEXH,EACGvB,KAAI,gBACHG,EADG,EACHA,GACAwB,EAFG,EAEHA,MACAC,EAHG,EAGHA,UACAC,EAJG,EAIHA,MACaC,EALV,EAKHC,YAC2BC,EANxB,EAMHC,SAAYC,cANT,OAQH,yBAAKR,UAAU,UAAUpB,cAAY,UAAUF,IAAMD,GACnD,2BAAKwB,GACL,yBAAKQ,IAAMP,EAAYQ,IAAI,YAC3B,2BAAKP,GACFG,EAAgBP,EAAiB,GACpC,4BACEnB,cAAY,sBACZD,KAAK,SACLH,QAAU,kBAAMA,EAAQC,KAH1B,WAOA,kBAAC,IAAD,CACEkC,GAAK,CACHC,SAAS,kBAAD,OAAoBR,EAApB,YAAkC3B,GAC1CoC,MAAM,YAAKf,IAEblB,cAAY,uBALd,yB,GA5BUG,IAAMf,W,4CCJzB,sBAAA8C,EAAA,4DACW,oDADX,kBAEEC,MADS,qDACMC,MAAK,SAACC,GAAD,OAAcA,EAASC,WAF7C,4C,sBAKA,SAAeC,EAAtB,oC,4CAAO,WAA+Cf,EAAYgB,GAA3D,eAAAN,EAAA,6DACCO,EADD,iEACqEjB,EADrE,cACqFgB,GADrF,kBAEEL,MAAMM,GAASL,MAAK,SAACC,GAAD,OAAcA,EAASC,WAF7C,4C,0BCiGQI,E,kDA9Fb,WAAYnD,GAAQ,IAAD,8BACjB,cAAMA,IACD0C,MAAQ,CACXU,WAAY,GACZC,aAAc,GACdpD,WAAY,GACZqD,QAAS,IAEX,EAAKC,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAC9B,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBACzB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBAXF,E,gEAcE,IAAD,QDtBf,WAAP,gCCuBII,GACGf,MAAK,SAACC,GAAD,OAAc,EAAKe,SAAS,CAAE5D,WAAY6C,S,gDAGhB,IAC1BpC,EADyB,EAAVoD,OACfpD,MACRX,KAAK8D,SAAS,CACZT,WAAY1C,M,kCAIJJ,GAAK,IAAD,EACoBP,KAAK2C,MAA/BW,EADM,EACNA,aAAcC,EADR,EACQA,QAChBS,EAAcV,EAAaW,MAAK,SAACC,GAAD,OAAU3D,IAAO2D,EAAK3D,MAC5DyD,EAAYG,SAAW,EACvBnE,KAAK8D,SAAS,CACZP,QAAQ,GAAD,mBAAMA,GAAN,CAAeS,Q,iFAIF9B,G,uFACE2B,EAAoC3B,EAAY,I,OAAlEkC,E,OACNpE,KAAK8D,SAAS,CACZR,aAAcc,EAAUC,U,uQAKlBhB,EAAerD,KAAK2C,MAApBU,W,SACgBQ,EAAoC,GAAIR,G,QAA1De,E,QAESC,QAAQC,OAKrBtE,KAAK8D,SAAS,CACZR,aAAcc,EAAUC,QACxBE,aAAa,IANfvE,KAAK8D,SAAS,CACZS,aAAa,I,qIAUT,IAAD,EACoDvE,KAAK2C,MAAxDW,EADD,EACCA,aAAciB,EADf,EACeA,YAAarE,EAD5B,EAC4BA,WAAYqD,EADxC,EACwCA,QACzCiB,EAAqB,4DAC3B,OACE,6BACE,kBAAC,EAAD,CACElD,mBAAqBtB,KAAKwD,uBAC1BjC,cAAgBvB,KAAK0D,iBAEvB,kBAAC,EAAD,CACExD,WAAaA,EACbC,wBAA0BH,KAAK2D,oBAG/BY,EAAcC,EAAqB,kBAAC,EAAD,CACjC7C,SAAW2B,EACXhD,QAAUN,KAAK4D,YACfhC,UAAY2B,IAGhB,4BAAQ9C,KAAK,UACX,kBAAC,IAAD,CACEgC,GAAK,CACHC,SAAU,iBACVC,MAAOY,IAHX,WAOE,8BAAQA,EAAQe,e,GAvFTzD,IAAMf,WCmKV2E,E,kDArKb,WAAYxE,GAAQ,IAAD,0BAGT0C,GAFR,cAAM1C,IACoBA,MAAlByE,SACA/B,MAHS,OAIjB,EAAKA,MAAQ,CACXgC,eAAe,YAAKhC,GACpBiC,WAAY,GAEd,EAAKA,WAAa,EAAKA,WAAWnB,KAAhB,gBAClB,EAAKoB,wBAA0B,EAAKA,wBAAwBpB,KAA7B,gBAC/B,EAAKqB,wBAA0B,EAAKA,wBAAwBrB,KAA7B,gBAC/B,EAAKsB,cAAgB,EAAKA,cAActB,KAAnB,gBACrB,EAAKuB,gBAAkB,EAAKA,gBAAgBvB,KAArB,gBACvB,EAAKwB,iBAAmB,EAAKA,iBAAiBxB,KAAtB,gBACxB,EAAKyB,qBAAuB,EAAKA,qBAAqBzB,KAA1B,gBAdX,E,gEAkBjBzD,KAAK4E,e,mCAGO,IAENO,EADqBnF,KAAK2C,MAAxBgC,eAELS,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAOC,EAAQrD,MAAQqD,EAAQnB,WAAW,GACtEnE,KAAK8D,SAAS,CACZc,WAAYO,M,8CAIQ5E,GAAK,IAErBgF,EADqBvF,KAAK2C,MAAxBgC,eACuBvE,KAAI,SAAC8D,GAAU,IAChBsB,EAAsBtB,EAA1CuB,mBACR,OAAIvB,EAAK3D,KAAOA,GAAMiF,EAAoBtB,EAAKC,UAC7CD,EAAKC,UAAY,EACVD,GAEFA,KAETlE,KAAK8D,SAAS,CACZa,eAAgBY,IAElBvF,KAAK4E,e,8CAGiBrE,GAAK,IACnBoE,EAAmB3E,KAAK2C,MAAxBgC,eACFT,EAAOS,EAAeV,MAAK,SAACqB,GAAD,OAAaA,EAAQ/E,KAAOA,KACvC,IAAlB2D,EAAKC,WACPD,EAAKC,UAAY,GAEnBnE,KAAK8D,SAAS,CACZa,mBAEF3E,KAAK4E,e,oCAGOrE,GAAK,IACToE,EAAmB3E,KAAK2C,MAAxBgC,eACFe,EAAaf,EAAeV,MAAK,SAACqB,GAAD,OAAaA,EAAQ/E,KAAOA,KAC7DoF,EAAQhB,EAAeiB,QAAQF,GACrCf,EAAekB,OAAOF,EAAO,GAC7B3F,KAAK8D,SAAS,CACZa,mBAEF3E,KAAK4E,e,wCAIL,OACE,iCACE,uBAAGlE,cAAY,+BAAf,iC,yCAOc,IACVkE,EAAe5E,KAAK2C,MAApBiC,WACR,OACE,yDAEIA,K,6CAKgB,IACdD,EAAmB3E,KAAK2C,MAAxBgC,eACR,OACE,4BACElE,KAAK,UAEL,kBAAC,IAAD,CACEgC,GAAK,CACHC,SAAU,iBACVC,MAAOgC,GAETjE,cAAY,qBALd,qB,+BAaI,IAAD,OACCiE,EAAmB3E,KAAK2C,MAAxBgC,eACFmB,EAAY9F,KAAKgF,kBACvB,OAA8B,IAA1BL,EAAeL,OAAqBwB,EAEtC,6BAEInB,EAAevE,KAAI,gBAAG2B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAWmC,EAArB,EAAqBA,SAAU5D,EAA/B,EAA+BA,GAAI0B,EAAnC,EAAmCA,MAAnC,OACjB,yBAAKzB,IAAMD,GACT,4BACEE,KAAK,SACLH,QAAU,kBAAM,EAAKyE,cAAcxE,KAFrC,KAMA,yBACEgC,IAAMP,EACNQ,IAAG,eAAWT,KAEhB,uBAAGrB,cAAY,8BAA+BqB,GAC9C,6BACE,4BACEtB,KAAK,SACLC,cAAY,4BACZJ,QAAU,kBAAM,EAAKwE,wBAAwBvE,KAH/C,KAOA,uBAAGG,cAAY,kCAAmCyD,GAClD,4BACE1D,KAAK,SACLC,cAAY,4BACZJ,QAAU,kBAAM,EAAKuE,wBAAwBtE,KAH/C,KAOA,mCAEI0B,QAMVjC,KAAKiF,mBACLjF,KAAKkF,4B,GA1JYrE,IAAMf,W,QC+DlBiG,E,kDAhEb,WAAY9F,GAAQ,IAAD,8BACjB,cAAMA,IACD+F,aAAe,EAAKA,aAAavC,KAAlB,gBACpB,EAAKd,MAAQ,CACXsD,MAAO,GACPC,OAAQ,EACRC,QAAS,IANM,E,yDAUNvF,EAAMD,GACjBX,KAAK8D,SAAL,eACGlD,EAAOD,M,+BAIF,IAAD,SAC4BX,KAAK2C,MAAhCsD,EADD,EACCA,MAAOC,EADR,EACQA,OAAQC,EADhB,EACgBA,QACvB,OACE,6BACE,8BACE,2BAAOC,QAAQ,eAAf,SAEE,2BACE3F,KAAK,QACL4F,UAAQ,EACR5E,YAAY,SACZd,MAAQsF,EACRzE,SAAW,SAAC8E,GAAD,OAAW,EAAKN,aAAa,QAASM,EAAMvC,OAAOpD,WAGlE,2BAAOyF,QAAQ,gBAAf,kBAEE,2BACE3F,KAAK,SACL8F,IAAM,EACNC,IAAM,EACNC,KAAO,GACP9F,MAAQuF,EACR1E,SAAW,SAAC8E,GAAD,OAAW,EAAKN,aAAa,SAAUM,EAAMvC,OAAOpD,WAGnE,2BAAOyF,QAAQ,iBAAf,iBAEE,8BACE1F,cAAY,4BACZe,YAAY,iBACZd,MAAQwF,EACRO,KAAK,IACLC,KAAK,KACLnF,SAAW,SAAC8E,GAAD,OAAW,EAAKN,aAAa,UAAWM,EAAMvC,OAAOpD,WAGpE,4BACEF,KAAK,UADP,gC,GAtDeI,IAAMf,WCmGhB8G,E,kDA9Fb,aAAe,IAAD,8BACZ,gBACKjE,MAAQ,CACX2C,QAAS,GACTuB,aAAc,IAEhB,EAAKC,cAAgB,EAAKA,cAAcrD,KAAnB,gBACrB,EAAKsD,UAAY,EAAKA,UAAUtD,KAAf,gBACjB,EAAKuD,gBAAkB,EAAKA,gBAAgBvD,KAArB,gBARX,E,gEAYZzD,KAAK8G,gBACL9G,KAAKgH,oB,wCAGY,IAETrE,EADa3C,KAAKC,MAAlByE,SACA/B,MACJA,GACF3C,KAAK8D,SAAS,CAAE+C,aAAa,YAAKlE,O,kCAIzB,IAAD,EACwB3C,KAAK2C,MAA/B2C,EADE,EACFA,QAASuB,EADP,EACOA,aACjBvB,EAAQnB,SAAW,EACnBnE,KAAK8D,SAAS,CAAE+C,aAAa,GAAD,mBAAMA,GAAN,CAAoBvB,Q,uKAIEtF,KAAKC,MAA/CgH,MAASC,OAAUC,E,EAAAA,WAAY5G,E,EAAAA,G,SACdsD,EAAoCsD,EAAY,I,OAAnEC,E,OACAC,EAAiBD,EAAW/C,QAC/BJ,MAAK,SAACqB,GAAD,OAAaA,EAAQ/E,KAAOA,KACpCP,KAAK8D,SAAS,CACZwB,QAAS+B,I,qIAIH,IAAD,EAC2BrH,KAAK2C,MAA/B2C,EADD,EACCA,QAASuB,EADV,EACUA,aACT9E,EAA4BuD,EAA5BvD,MAAOC,EAAqBsD,EAArBtD,UAAWC,EAAUqD,EAAVrD,MAC1B,OACE,6BACE,2BACE,0BAAMvB,cAAY,uBACdqB,EACD,IAFH,IAIG,KAEH,mCAEG,IACCE,IAGN,yBAAKM,IAAMP,EAAYQ,IAAI,sBAC3B,kBAAC,EAAD,MACA,kBAAC,IAAD,CACE9B,cAAY,uBACZ+B,GAAK,CACHC,SAAU,iBACVC,MAAOkE,IAJX,oBASA,0BAAMnG,cAAY,sBAAuBmG,EAAavC,QACtD,4BACE7D,KAAK,SACLC,cAAY,6BACZJ,QAAUN,KAAK+G,WAHjB,8B,GAvEqBlG,IAAMf,WCsKpBwH,E,kDAxKb,WAAYrH,GAAQ,IAAD,0BAGT0C,GAFR,cAAM1C,IACoBA,MAAlByE,SACA/B,MAHS,OAIjB,EAAKA,MAAQ,CACX4E,MAAM,YAAK5E,GACXiC,WAAY,GAEd,EAAK4C,eAAiB,EAAKA,eAAe/D,KAApB,gBACtB,EAAKgE,WAAa,EAAKA,WAAWhE,KAAhB,gBAClB,EAAKmB,WAAa,EAAKA,WAAWnB,KAAhB,gBAClB,EAAKiE,cAAgB,EAAKA,cAAcjE,KAAnB,gBAXJ,E,6DAcD,IAAD,EACezD,KAAK2C,MAA3B4E,EADO,EACPA,MAAO3C,EADA,EACAA,WACf,OACE,6BACE,oDAEE2C,EAAMnH,KAAI,gBAAG2B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAWmC,EAArB,EAAqBA,SAAU5D,EAA/B,EAA+BA,GAAI0B,EAAnC,EAAmCA,MAAnC,OACR,yBAAKzB,IAAMD,GACT,yBAAKgC,IAAMP,EAAYQ,IAAG,eAAWT,KACrC,8BAAQA,GACR,mCAEIE,EAAQkC,OAKlB,gDAEIS,M,mCAMI,IAENO,EADYnF,KAAK2C,MAAf4E,MAELnC,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAOC,EAAQrD,MAAQqD,EAAQnB,WAAW,GACtEnE,KAAK8D,SAAS,CACZc,WAAYO,M,mCAKd,OACE,6BACE,2BACE1E,KAAK,OACLG,KAAK,OACLF,cAAY,oBACZe,YAAY,gBACZ4E,UAAQ,IAEV,2BACE5F,KAAK,OACLG,KAAK,MACLF,cAAY,eACZe,YAAY,MACZ4E,UAAQ,IAEV,2BACE5F,KAAK,QACLG,KAAK,QACLF,cAAY,iBACZe,YAAY,SACZ4E,UAAQ,IAEV,2BACE5F,KAAK,OACLG,KAAK,WACLF,cAAY,iBACZe,YAAY,WACZ4E,UAAQ,IAEV,2BACE5F,KAAK,OACLG,KAAK,MACLF,cAAY,eACZe,YAAY,MACZ4E,UAAQ,IAEV,2BACE5F,KAAK,OACLG,KAAK,UACLF,cAAY,mBACZe,YAAY,cACZ4E,UAAQ,O,sCAOd,OACE,6BACE,2BAAOD,QAAQ,UAAf,SAEE,2BACE7F,GAAG,SACHE,KAAK,QACLG,KAAK,aAGT,2BAAOwF,QAAQ,cAAf,0BAEE,2BACE7F,GAAG,aACHE,KAAK,QACLG,KAAK,UACLD,MAAM,SANV,OASE,2BACEJ,GAAG,aACHE,KAAK,QACLG,KAAK,UACLD,MAAM,eAbV,aAgBE,2BACEJ,GAAG,aACHE,KAAK,QACLG,KAAK,UACLD,MAAM,QApBV,U,mCA6BJ,OACE,8BACIX,KAAKyH,aACLzH,KAAK0H,gBACP,4BACEjH,KAAK,SACLH,QAAU,kBAAMqH,QAAQC,IAAI,aAF9B,0B,+BAYJ,OADAD,QAAQC,IAAI5H,KAAKC,OAEf,6BACID,KAAKwH,iBACLxH,KAAK6H,kB,GA7JYhH,IAAMf,WCwBlBgI,E,kDAnBb,WAAY7H,GAAQ,IAAD,8BACjB,cAAMA,IACD0C,MAAQ,GAFI,E,qDAMjB,OACE,kBAAC,IAAD,CAAeoF,SAAUC,uBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY/E,IAClC,kBAAC,IAAD,CAAO8E,KAAK,iBAAiBC,UAAY1D,IACzC,kBAAC,IAAD,CAAOyD,KAAK,kCAAkCC,UAAYvB,IAC1D,kBAAC,IAAD,CAAOsB,KAAK,iBAAiBC,UAAYb,U,GAbjCzG,IAAMf,WCKJsI,QACW,cAA7BC,OAAO3D,SAAS4D,UAEkB,UAA7BD,OAAO3D,SAAS4D,UAEhBD,OAAO3D,SAAS4D,SAASrB,MAC1B,2DCZNsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhG,MAAK,SAACiG,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNvB,QAAQuB,MAAMA,EAAMC,c","file":"static/js/main.0ad79416.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div>Carregando...</div>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from './Loading';\n\nclass ListOfCategories extends React.Component {\n  render() {\n    const { categories, onClickSelectedCategory } = this.props;\n    if (categories === 0) return <Loading />;\n    return (\n      <div>\n        <p>Categorias:</p>\n        {\n          categories.map((elem) => (\n            <button\n              onClick={ () => onClickSelectedCategory(elem.id) }\n              key={ elem.id }\n              type=\"button\"\n              data-testid=\"category\"\n              value={ elem.name }\n            >\n              { elem.name }\n            </button>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nListOfCategories.propTypes = {\n  categories: PropTypes.arrayOf().isRequired,\n  onClickSelectedCategory: PropTypes.func.isRequired,\n};\n\nexport default ListOfCategories;\n","import styled from 'styled-components';\n\nexport const SearchButton = styled.button`\n  background-color: green;\n`\nexport const Div = styled.div`\n  display: flex;\n`\n\nexport const Input = styled.input`\n  background-color: green;\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from '../CSS/S.SearchBar';\n\nclass SearchBar extends React.Component {\n  render() {\n    const { onSearchTextChange, onClickSearch } = this.props;\n    return (\n      <S.Div>\n        <S.Input\n          type=\"text\"\n          onChange={ onSearchTextChange }\n          name=\"search\"\n          placeholder=\"Digite aqui seu produto...\"\n        />\n        <S.SearchButton\n          type=\"button\"\n          onClick={ onClickSearch }\n        >\n          Buscar\n        </S.SearchButton>\n      </S.Div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSearchTextChange: PropTypes.func.isRequired,\n  onClickSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ProductCard extends React.Component {\n  render() {\n    const { products, onClick, cartItens } = this.props;\n    const isFreeShipping = <span data-testid=\"free-shipping\">Frete Gratis!</span>;\n    return (\n      <div className=\"pai\">\n        {\n          products\n            .map(({\n              id,\n              title,\n              thumbnail,\n              price,\n              category_id: categoryId,\n              shipping: { free_shipping: freeShipping },\n            }) => (\n              <div className=\"product\" data-testid=\"product\" key={ id }>\n                <p>{ title }</p>\n                <img src={ thumbnail } alt=\"produto\" />\n                <p>{ price }</p>\n                { (freeShipping) ? isFreeShipping : '' }\n                <button\n                  data-testid=\"product-add-to-cart\"\n                  type=\"button\"\n                  onClick={ () => onClick(id) }\n                >\n                  Comprar\n                </button>\n                <Link\n                  to={ {\n                    pathname: `product-detail/${categoryId}/${id}`,\n                    state: [...cartItens],\n                  } }\n                  data-testid=\"product-detail-link\"\n                >\n                  Ver detalhes\n                </Link>\n\n              </div>))\n        }\n\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  cartItens: PropTypes.arrayOf().isRequired,\n  products: PropTypes.arrayOf().isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ProductCard;\n","export async function getCategories() {\n  const API_URL = 'https://api.mercadolibre.com/sites/MLB/categories';\n  return fetch(API_URL).then((response) => response.json());\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const API_URL = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n  return fetch(API_URL).then((response) => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListOfCategories from '../Components/ListOfCategories';\nimport SearchBar from '../Components/SearchBar';\nimport ProductCard from '../Components/ProductCard';\nimport * as api from '../services/api';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      productsList: [],\n      categories: [],\n      addItem: [],\n    };\n    this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n    this.fetchApiSearch = this.fetchApiSearch.bind(this);\n    this.fetchByCategoryId = this.fetchByCategoryId.bind(this);\n    this.addItemCart = this.addItemCart.bind(this);\n  }\n\n  componentDidMount() {\n    api.getCategories()\n      .then((response) => this.setState({ categories: response }));\n  }\n\n  handleSearchTextChange({ target }) {\n    const { value } = target;\n    this.setState({\n      searchText: value,\n    });\n  }\n\n  addItemCart(id) {\n    const { productsList, addItem } = this.state;\n    const itemProduct = productsList.find((item) => id === item.id);\n    itemProduct.quantity = 1;\n    this.setState({\n      addItem: [...addItem, itemProduct],\n    });\n  }\n\n  async fetchByCategoryId(categoryId) {\n    const fetchList = await api.getProductsFromCategoryAndQuery(categoryId, '');\n    this.setState({\n      productsList: fetchList.results,\n    });\n  }\n\n  async fetchApiSearch() {\n    const { searchText } = this.state;\n    const fetchList = await api.getProductsFromCategoryAndQuery('', searchText);\n\n    if (!fetchList.results.length) {\n      this.setState({\n        showMessage: true,\n      });\n    } else {\n      this.setState({\n        productsList: fetchList.results,\n        showMessage: false,\n      });\n    }\n  }\n\n  render() {\n    const { productsList, showMessage, categories, addItem } = this.state;\n    const emptySearchMessage = <p>Nenhum produto foi encontrado</p>;\n    return (\n      <div>\n        <SearchBar\n          onSearchTextChange={ this.handleSearchTextChange }\n          onClickSearch={ this.fetchApiSearch }\n        />\n        <ListOfCategories\n          categories={ categories }\n          onClickSelectedCategory={ this.fetchByCategoryId }\n        />\n        {\n          showMessage ? emptySearchMessage : <ProductCard\n            products={ productsList }\n            onClick={ this.addItemCart }\n            cartItens={ addItem }\n          />\n        }\n        <button type=\"button\">\n          <Link\n            to={ {\n              pathname: '/shopping-cart',\n              state: addItem,\n            } }\n          >\n            Carrinho\n            <span>{ addItem.length }</span>\n          </Link>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n    const { location } = this.props;\n    const { state } = location;\n    this.state = {\n      listOfProducts: [...state],\n      totalPrice: 0,\n    };\n    this.totalPrice = this.totalPrice.bind(this);\n    this.increaseProductQuantity = this.increaseProductQuantity.bind(this);\n    this.decreaseProductQuantity = this.decreaseProductQuantity.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.renderEmptyCart = this.renderEmptyCart.bind(this);\n    this.renderTotalPrice = this.renderTotalPrice.bind(this);\n    this.renderCheckoutButton = this.renderCheckoutButton.bind(this);\n  }\n\n  componentDidMount() {\n    this.totalPrice();\n  }\n\n  totalPrice() {\n    const { listOfProducts } = this.state;\n    const total = listOfProducts\n      .reduce((acc, product) => acc + (product.price * product.quantity), 0);\n    this.setState({\n      totalPrice: total,\n    });\n  }\n\n  increaseProductQuantity(id) {\n    const { listOfProducts } = this.state;\n    const newCart = listOfProducts.map((item) => {\n      const { available_quantity: availableQuantity } = item;\n      if (item.id === id && availableQuantity > item.quantity) {\n        item.quantity += 1;\n        return item;\n      }\n      return item;\n    });\n    this.setState({\n      listOfProducts: newCart,\n    });\n    this.totalPrice();\n  }\n\n  decreaseProductQuantity(id) {\n    const { listOfProducts } = this.state;\n    const item = listOfProducts.find((product) => product.id === id);\n    if (item.quantity !== 0) {\n      item.quantity -= 1;\n    }\n    this.setState({\n      listOfProducts,\n    });\n    this.totalPrice();\n  }\n\n  deleteProduct(id) {\n    const { listOfProducts } = this.state;\n    const removeItem = listOfProducts.find((product) => product.id === id);\n    const index = listOfProducts.indexOf(removeItem);\n    listOfProducts.splice(index, 1);\n    this.setState({\n      listOfProducts,\n    });\n    this.totalPrice();\n  }\n\n  renderEmptyCart() {\n    return (\n      <section>\n        <p data-testid=\"shopping-cart-empty-message\">\n          Seu carrinho está vazio\n        </p>\n      </section>\n    );\n  }\n\n  renderTotalPrice() {\n    const { totalPrice } = this.state;\n    return (\n      <p>\n        O valor total da compra: R$\n        { totalPrice }\n      </p>\n    );\n  }\n\n  renderCheckoutButton() {\n    const { listOfProducts } = this.state;\n    return (\n      <button\n        type=\"button\"\n      >\n        <Link\n          to={ {\n            pathname: '/order-summary',\n            state: listOfProducts,\n          } }\n          data-testid=\"checkout-products\"\n        >\n          Revisar Compra\n        </Link>\n      </button>\n    );\n  }\n\n  render() {\n    const { listOfProducts } = this.state;\n    const emptyCart = this.renderEmptyCart();\n    if (listOfProducts.length === 0) return emptyCart;\n    return (\n      <div>\n        {\n          listOfProducts.map(({ title, thumbnail, quantity, id, price }) => (\n            <div key={ id }>\n              <button\n                type=\"button\"\n                onClick={ () => this.deleteProduct(id) }\n              >\n                X\n              </button>\n              <img\n                src={ thumbnail }\n                alt={ `foto ${title}` }\n              />\n              <p data-testid=\"shopping-cart-product-name\">{ title }</p>\n              <div>\n                <button\n                  type=\"button\"\n                  data-testid=\"product-decrease-quantity\"\n                  onClick={ () => this.decreaseProductQuantity(id) }\n                >\n                  -\n                </button>\n                <p data-testid=\"shopping-cart-product-quantity\">{ quantity }</p>\n                <button\n                  type=\"button\"\n                  data-testid=\"product-increase-quantity\"\n                  onClick={ () => this.increaseProductQuantity(id) }\n                >\n                  +\n                </button>\n                <span>\n                  R$\n                  { price }\n                </span>\n              </div>\n            </div>\n          ))\n        }\n        { this.renderTotalPrice() }\n        { this.renderCheckoutButton() }\n      </div>\n    );\n  }\n}\n\nShoppingCart.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.arrayOf(),\n  }).isRequired,\n};\n\nexport default ShoppingCart;\n","import React from 'react';\n\nclass RatingForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      email: '',\n      rating: 0,\n      comment: '',\n    };\n  }\n\n  handleChange(name, value) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { email, rating, comment } = this.state;\n    return (\n      <div>\n        <form>\n          <label htmlFor=\"email-input\">\n            E-mail\n            <input\n              type=\"email\"\n              required\n              placeholder=\"E-mail\"\n              value={ email }\n              onChange={ (event) => this.handleChange('email', event.target.value) }\n            />\n          </label>\n          <label htmlFor=\"rating-input\">\n            Avaliação\n            <input\n              type=\"number\"\n              min={ 0 }\n              max={ 5 }\n              step={ 0.1 }\n              value={ rating }\n              onChange={ (event) => this.handleChange('rating', event.target.value) }\n            />\n          </label>\n          <label htmlFor=\"comment-input\">\n            Comentários\n            <textarea\n              data-testid=\"product-detail-evaluation\"\n              placeholder=\"Comentários\"\n              value={ comment }\n              rows=\"5\"\n              cols=\"20\"\n              onChange={ (event) => this.handleChange('comment', event.target.value) }\n            />\n          </label>\n          <button\n            type=\"button\"\n          >\n            Enviar Avaliação\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RatingForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as api from '../services/api';\nimport RatingForm from '../Components/RatingForm';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      product: [],\n      shoppingCart: [],\n    };\n    this.fetchCategory = this.fetchCategory.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n    this.setShoppingCart = this.setShoppingCart.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCategory();\n    this.setShoppingCart();\n  }\n\n  setShoppingCart() {\n    const { location } = this.props;\n    const { state } = location;\n    if (state) {\n      this.setState({ shoppingCart: [...state] });\n    }\n  }\n\n  addToCart() {\n    const { product, shoppingCart } = this.state;\n    product.quantity = 1;\n    this.setState({ shoppingCart: [...shoppingCart, product] });\n  }\n\n  async fetchCategory() {\n    const { match: { params: { categoryID, id } } } = this.props;\n    const productObj = await api.getProductsFromCategoryAndQuery(categoryID, '');\n    const productDetails = productObj.results\n      .find((product) => product.id === id);\n    this.setState({\n      product: productDetails,\n    });\n  }\n\n  render() {\n    const { product, shoppingCart } = this.state;\n    const { title, thumbnail, price } = product;\n    return (\n      <div>\n        <p>\n          <span data-testid=\"product-detail-name\">\n            { title }\n            {' '}\n            -\n            {' '}\n          </span>\n          <span>\n            R$\n            {' '}\n            { price }\n          </span>\n        </p>\n        <img src={ thumbnail } alt=\"product-thumbnail\" />\n        <RatingForm />\n        <Link\n          data-testid=\"shopping-cart-button\"\n          to={ {\n            pathname: '/shopping-cart',\n            state: shoppingCart,\n          } }\n        >\n          Ir para carrinho\n        </Link>\n        <span data-testid=\"shopping-cart-size\">{ shoppingCart.length }</span>\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ this.addToCart }\n        >\n          Adicionar ao Carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.arrayOf(),\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      categoryID: PropTypes.string,\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProductDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass OrderSummary extends React.Component {\n  constructor(props) {\n    super(props);\n    const { location } = this.props;\n    const { state } = location;\n    this.state = {\n      order: [...state],\n      totalPrice: 0,\n    };\n    this.productsReview = this.productsReview.bind(this);\n    this.buyerInfos = this.buyerInfos.bind(this);\n    this.totalPrice = this.totalPrice.bind(this);\n    this.paymentMethod = this.paymentMethod.bind(this);\n  }\n\n  productsReview() {\n    const { order, totalPrice } = this.state;\n    return (\n      <div>\n        <h1>Revise seus Produtos</h1>\n        {\n          order.map(({ title, thumbnail, quantity, id, price }) => (\n            <div key={ id }>\n              <img src={ thumbnail } alt={ `foto ${title}` } />\n              <span>{ title }</span>\n              <span>\n                R$\n                { price * quantity }\n              </span>\n            </div>\n          ))\n        }\n        <p>\n          Preço Total: R$\n          { totalPrice }\n        </p>\n      </div>\n    );\n  }\n\n  totalPrice() {\n    const { order } = this.state;\n    const total = order\n      .reduce((acc, product) => acc + (product.price * product.quantity), 0);\n    this.setState({\n      totalPrice: total,\n    });\n  }\n\n  buyerInfos() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          name=\"name\"\n          data-testid=\"checkout-fullname\"\n          placeholder=\"Nome completo\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"CPF\"\n          data-testid=\"checkout-cpf\"\n          placeholder=\"CPF\"\n          required\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          data-testid=\"checkout-email\"\n          placeholder=\"E-mail\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"telefone\"\n          data-testid=\"checkout-phone\"\n          placeholder=\"Telefone\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"CEP\"\n          data-testid=\"checkout-cep\"\n          placeholder=\"CEP\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"address\"\n          data-testid=\"checkout-address\"\n          placeholder=\"Endereço\"\n          required\n        />\n      </div>\n    );\n  }\n\n  paymentMethod() {\n    return (\n      <div>\n        <label htmlFor=\"boleto\">\n          Boleto\n          <input\n            id=\"boleto\"\n            type=\"radio\"\n            name=\"payment\"\n          />\n        </label>\n        <label htmlFor=\"creditcard\">\n          Cartão de crédito\n          <input\n            id=\"creditcard\"\n            type=\"radio\"\n            name=\"payment\"\n            value=\"visa\"\n          />\n          Visa\n          <input\n            id=\"creditcard\"\n            type=\"radio\"\n            name=\"payment\"\n            value=\"mastercard\"\n          />\n          MasterCard\n          <input\n            id=\"creditcard\"\n            type=\"radio\"\n            name=\"payment\"\n            value=\"elo\"\n          />\n          Elo\n        </label>\n      </div>\n    );\n  }\n\n  renderForm() {\n    return (\n      <form>\n        { this.buyerInfos() }\n        { this.paymentMethod() }\n        <button\n          type=\"button\"\n          onClick={ () => console.log('XABLAU!') }\n        >\n          Finalizar a Compra!\n        </button>\n      </form>\n    );\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        { this.productsReview() }\n        { this.renderForm() }\n      </div>\n    );\n  }\n}\n\nOrderSummary.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.arrayOf(),\n  }).isRequired,\n};\n\nexport default OrderSummary;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './Pages/Home';\nimport ShoppingCart from './Pages/ShoppingCart';\nimport ProductDetails from './Pages/ProductDetails';\nimport OrderSummary from './Pages/OrderSummary';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route path=\"/shopping-cart\" component={ ShoppingCart } />\n          <Route path=\"/product-detail/:categoryID/:id\" component={ ProductDetails } />\n          <Route path=\"/order-summary\" component={ OrderSummary } />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}